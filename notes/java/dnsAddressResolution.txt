1. DNS CLient resolver cache:
    DNS client resolver cache is RAM based table consisting of entries in the hosts file and hostname that the OS has previously resolved using DNS. Response to the DNS queries are cached through a configurable parameter TTL.
2. Java system property to set this is 
    networkaddress.cache.ttl
3. Starting Java 6 the default value for “networkaddress.cache.ttl” is changed to 30
4. 
getAddress                                        Returns the raw IP Address for this object.
getAllByName(String host)                  Given the name of host, an array of IP address is returned.
getByAddress(byte[] addr)                   Returns an InetAddress object given the raw IP address
getByAddress(String host, byte[] addr) Create an InetAddress based on the provided host name and IP address
getByName(String host)                       Determines the IP address of a host, given the host's name.
getCanonicalHostName()                      Gets the fully qualified domain name for this IP address.
getHostAddress()                                 Returns the IP address string in textual presentation
getHostName()                                    Gets the host name for this IP address
getLocalHost()                                     Returns the local host.

5. Resolve issue seems to be handled in many projects...

6. java 1.6 introduced a change to the default DNS caching behaviour networkaddress.cache.ttl changed from -1(cache forever) to system dependent value.

7. 
Regarding Pull request : https://github.com/apache/zookeeper/pull/150/files
 - If Ip address is supplied to client then do not re-resolve.... if Hostname is given only then re-resolve. Is this better?
 - LOG statement invokes getHostString(currAddr) again.

8. Lesson learnt : 
- create InetSocketAddress instance only at the last instance, this ensures the lookup happens at that instance.
Projects like elastic search, mongodb have similar changes done.
- sun.net.spi.nameservice.dns.DNSNameService we use this to lookup address for a given hostname.